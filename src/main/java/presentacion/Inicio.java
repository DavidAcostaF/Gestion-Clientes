/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dominio.Cliente;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.ClienteDTO;
import negocio.ClientesBO;
import negocio.GenerarReportes;

/**
 * La clase Inicio es una ventana principal de la aplicación que permite
 * visualizar, buscar y gestionar clientes. Esta clase extiende JFrame y 
 * utiliza la funcionalidad de ClientesBO para manejar la lógica de negocio 
 * de los clientes, además de ofrecer la capacidad de generar reportes.
 * 
 * La clase proporciona métodos para cargar y actualizar una tabla de clientes, 
 * buscar clientes dinámicamente y abrir ventanas adicionales para agregar o ver 
 * detalles de un cliente.
 * 
 * @author af_da
 */
public class Inicio extends javax.swing.JFrame {
    private List<ClienteDTO> clientes;
    private ClientesBO clientesBO;
    private GenerarReportes reporte;
    
    /**
     * Crea una nueva ventana de Inicio.
     * 
     * Inicializa los componentes gráficos de la ventana, carga la lista de 
     * clientes desde ClientesBO, y llena la tabla con los datos 
     * correspondientes. También establece un {MouseListener para manejar 
     * clics en la tabla y mostrar detalles del cliente seleccionado.
     */
    public Inicio() {
        initComponents();
        reporte = new GenerarReportes();
        clientesBO =ClientesBO.getInstance();
        clientes = clientesBO.getClientes();
        llenarTabla(clientes);
        Inicio inicio = this;
        
        tableClientes.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = tableClientes.getSelectedRow();
                if (selectedRow != -1) { // Ensure a row is actually selected
                    // Retrieve data from the selected row
                    String id = (String) tableClientes.getValueAt(selectedRow, 0);
                    String nombre = (String) tableClientes.getValueAt(selectedRow, 1);

                    // Display or process the data (you can modify this as needed)
                    Detalle detalle = new Detalle(new ClienteDTO(id,nombre));
                    detalle.setVisible(true);
          
                    inicio.dispose();
                }
            }
           
        });
    }

    /**
     * Llena la tabla de clientes con los datos proporcionados.
     * 
     * @param clientes una lista de objetos ClienteDTO que se mostrará en la tabla.
     */
    private void llenarTabla(List<ClienteDTO> clientes) {
        DefaultTableModel table = (DefaultTableModel) tableClientes.getModel();
            // Limpiar todas las filas de la tabla antes de agregar nuevas
        table.setRowCount(0);
        clientes.forEach(e->{
            table.addRow(new Object[]{e.getID(),e.getNombre()});
        });
    }
    
    /**
     * Realiza una consulta dinámica de clientes en base al ID y nombre ingresados 
     * en los campos de búsqueda.
     */
    private void consultaDinamica(){
        String id = txtBuscarid.getText();
        String nombre = txtBuscarNombre.getText();
        List<ClienteDTO>listaClientes = clientesBO.encontrarClientes(new ClienteDTO(id,nombre));
        if(id.equalsIgnoreCase("")&&nombre.equalsIgnoreCase("")){
            llenarTabla(clientesBO.getClientes());
        }
        llenarTabla(listaClientes);
        System.out.println(id);
        System.out.println(nombre);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarid = new javax.swing.JTextField();
        txtBuscarNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnReporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clientes");

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableClientes);
        if (tableClientes.getColumnModel().getColumnCount() > 0) {
            tableClientes.getColumnModel().getColumn(0).setResizable(false);
            tableClientes.getColumnModel().getColumn(1).setResizable(false);
        }

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Lista de clientes");

        txtBuscarid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscaridKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaridKeyTyped(evt);
            }
        });

        txtBuscarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarNombreKeyTyped(evt);
            }
        });

        jLabel2.setText("ID:");

        jLabel3.setText("Nombre");

        btnReporte.setText("Generar Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBuscarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                                    .addComponent(txtBuscarid)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSalir)
                                .addGap(124, 124, 124)
                                .addComponent(btnAgregar)))
                        .addGap(55, 55, 55)
                        .addComponent(btnReporte)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscarid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(btnAgregar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnReporte)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción para abrir la ventana de agregar un nuevo cliente.
     * 
     * @param evt el evento de acción
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Agregar agregar = new Agregar();
        agregar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * Acción que se ejecuta cuando el usuario busca un cliente por id.
     * 
     * @param evt el evento de acción
     */
    private void txtBuscaridKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaridKeyTyped
    }//GEN-LAST:event_txtBuscaridKeyTyped

    /**
     * Acción que se ejecuta cuando el usuario busca un cliente por nombre.
     * 
     * @param evt el evento de acción
     */
    private void txtBuscarNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNombreKeyTyped
    }//GEN-LAST:event_txtBuscarNombreKeyTyped

    /**
     * Acción que se ejecuta cuando el usuario busca un cliente por id.
     * 
     * @param evt el evento de acción
     */
    private void txtBuscaridKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaridKeyReleased
        consultaDinamica();
    }//GEN-LAST:event_txtBuscaridKeyReleased

    /**
     * Acción que se ejecuta cuando el usuario busca un cliente por nombre.
     * 
     * @param evt el evento de acción
     */
    private void txtBuscarNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNombreKeyReleased
        consultaDinamica();
    }//GEN-LAST:event_txtBuscarNombreKeyReleased

    /**
     * Acción que se ejecuta cuando se presiona el botón para salir de la aplicación.
     * 
     * @param evt el evento de acción
     */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * Acción para generar un reporte de los clientes en el sistema.
     * 
     * Si hay clientes disponibles en la lista, genera un reporte mediante la clase 
     * GenerarReportes. Si no hay clientes, muestra un mensaje informativo.
     * 
     * @param evt el evento de acción
     */
    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        // TODO add your handling code here:
        if (!clientes.isEmpty()) {
            reporte.generarReporte(clientes);
        } else {
            JOptionPane.showMessageDialog(this, "No se encuentran clientes.", "Mesnaje", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnReporteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTextField txtBuscarNombre;
    private javax.swing.JTextField txtBuscarid;
    // End of variables declaration//GEN-END:variables
}
